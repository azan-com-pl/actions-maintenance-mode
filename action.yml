name: 'Maintenance mode'

description: 'Manage maintenance mode status'

inputs:
  cloudflare-token:
    description: 'Cloudflare API token for enabling maintenance mode'
    required: true

  cloudflare-account-id:
    description: 'Cloudflare account ID'
    required: true

  cloudflare-kv-namespace-id:
    description: 'Cloudflare KV namespace ID for MAINTENANCE_PAGE_ENABLED flag'
    required: true

  command:
    description: "Command to execute. Either 'enable' or 'disable'"
    required: true

runs:
  using: "composite"
  steps:
    - name: Set MAINTENANCE_PAGE_ENABLED KV key to enable maintenance mode
      shell: bash
      env:
        CLOUDFLARE_API_TOKEN: ${{ inputs.cloudflare-token }}
        CLOUDFLARE_ACCOUNT_ID: ${{ inputs.cloudflare-account-id }}
      run: |
        curl --request PUT \
          "https://api.cloudflare.com/client/v4/accounts/${CLOUDFLARE_ACCOUNT_ID}/storage/kv/namespaces/${CLOUDFLARE_KV_NAMESPACE_ID}/values/MAINTENANCE_PAGE_ENABLED" \
          -f -s -S \
          -H "Authorization: Bearer ${CLOUDFLARE_API_TOKEN}" \
          --header 'Content-Type: multipart/form-data' \
          --form 'value=true' 2>&1
      if: ${{ inputs.command == 'enable' }}

    - name: Delete MAINTENANCE_PAGE_ENABLED KV key to disable maintenance mode
      shell: bash
      env:
        CLOUDFLARE_API_TOKEN: ${{ inputs.cloudflare-token }}
        CLOUDFLARE_ACCOUNT_ID: ${{ inputs.cloudflare-account-id }}
      run: |
        curl --request DELETE \
          "https://api.cloudflare.com/client/v4/accounts/${CLOUDFLARE_ACCOUNT_ID}/storage/kv/namespaces/${CLOUDFLARE_KV_NAMESPACE_ID}/values/MAINTENANCE_PAGE_ENABLED" \
          -f -s -S \
          -H "Authorization: Bearer ${CLOUDFLARE_API_TOKEN}" \
          -H "Content-Type: application/json" 2>&1
      if: ${{ inputs.command == 'disable' }}
